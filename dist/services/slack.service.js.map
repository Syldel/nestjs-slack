{"version":3,"file":"slack.service.js","sourceRoot":"/","sources":["services/slack.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAoD;AAEpD,4CAA2C;AAC3C,sCAAiD;AAIjD,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,mBAAS;IACvC,YAC0C,OAA2B;QAEjE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAFiB,YAAO,GAAP,OAAO,CAAoB;QAIjE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAChB,OAAO,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;SACzD;IACL,CAAC;IAGK,cAAc,CAAC,IAAY;;YAC7B,IAAI;gBAEA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;oBAGvC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;oBAC7B,IAAI,EAAE,IAAI;iBAEb,CAAC,CAAC;gBAIH,OAAO,MAAM,CAAC;aACjB;YACD,OAAO,KAAK,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;QACL,CAAC;KAAA;CACJ,CAAA;AA/BY,YAAY;IADxB,mBAAU,EAAE;IAGJ,WAAA,eAAM,CAAC,6BAAoB,CAAC,CAAA;;GAFxB,YAAY,CA+BxB;AA/BY,oCAAY","sourcesContent":["import { Injectable, Inject } from '@nestjs/common';\r\n\r\nimport { WebClient } from '@slack/web-api';\r\nimport { SLACK_CONFIG_OPTIONS } from '../common';\r\nimport { SlackConfigOptions } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class SlackService extends WebClient {\r\n    constructor(\r\n        @Inject(SLACK_CONFIG_OPTIONS) private options: SlackConfigOptions\r\n    ) {\r\n        super(options.token);\r\n\r\n        if (!options.token) {\r\n            console.warn('SlackService => Token is not defined!');\r\n        }\r\n    }\r\n\r\n    // Post a message to a channel your app is in using ID and message text\r\n    async publishMessage(text: string) {\r\n        try {\r\n            // Call the chat.postMessage method using the built-in WebClient\r\n            const result = await this.chat.postMessage({\r\n                // The token you used to initialize your app\r\n                // token: \"xoxb-your-token\",\r\n                channel: this.options.channel, // I finally use my user id here!\r\n                text: text\r\n                // You could also use a blocks[] array to send richer content\r\n            });\r\n\r\n            // Print result, which includes information about the message (like TS)\r\n            // console.log(result);\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}"]}